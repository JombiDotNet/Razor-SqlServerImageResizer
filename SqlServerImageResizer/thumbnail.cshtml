@*@{
  Layout = null;

  // Cache the image for a minute
  Response.OutputCache(60);

  var module = UrlData[0].ToString();
  var id = UrlData[1].AsInt();

  var db = new RgcNetEntities();

  List<byte[]> images = new List<byte[]>();

  // NOTE: currently, the thumbnails feature only works with files stored in the database (because LINQ works better. Not hard to fix, as this is really just eye candy anyway.
  switch (module)
  {
    case "master":
      var master = db.ImageMasters.SingleOrDefault(m => m.ImageId == id);
      
      images.AddRange(master.ImagesContents);
      break;
    case "gallery":
      var gallery = db.GalleryMasters.SingleOrDefault(g => g.GalleryId == id);
      
      images.AddRange(gallery.GalleryContents);

      break;
    default:
      Response.SetStatus(HttpStatusCode.NotFound);
      break;
  }



  if (images.Count == 0)
  {
    Response.Redirect("~/image-blank/rgcnet-shield_57.png");
    return;
  }
  else if (images.Count == 1)
  {
    WebImage webImage = new WebImage(images.First());
    webImage.Resize(MultiThumbnailGenerator.ImageDimension, MultiThumbnailGenerator.ImageDimension).Write();
  }
  else
  {

    using (var generator = new MultiThumbnailGenerator())
    {
      foreach (var contents in images)
      {
        using (var imageStream = new System.IO.MemoryStream(contents))
        {
          using (var image = System.Drawing.Image.FromStream(imageStream))
          {
            generator.AddImage(image);
          }
        }
      }
      using (var outStream = new System.IO.MemoryStream())
      {
        generator.WritePngToStream(outStream);
        var image = new WebImage(outStream);
        image.Write();
      }
    }
  }
}*@